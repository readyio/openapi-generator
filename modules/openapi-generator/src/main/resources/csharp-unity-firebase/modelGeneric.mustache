    /// <summary>
    /// {{description}}{{^description}}{{classname}}{{/description}}
    /// </summary>
    [Serializable]
    {{>visibility}} class {{classname}} : {{#parent}}{{{.}}}, {{/parent}} IEquatable<{{classname}}>
    {
        {{#vars}}
        {{#items.isEnum}}
        {{#items}}
        {{^complexType}}
{{>modelInnerEnum}}
        {{/complexType}}
        {{/items}}
        {{/items.isEnum}}
        {{#isEnum}}
        {{^complexType}}
{{>modelInnerEnum}}
        {{/complexType}}
        {{/isEnum}}
        {{#isEnum}}
        /// <summary>
        /// {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{.}}</value>
        {{/description}}
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{complexType}}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}} {{name}};
        {{/isEnum}}
        {{/vars}}
    {{#hasRequired}}
    {{^hasOnlyReadOnly}}
        /// <summary>
        /// Initializes a new instance of the <see cref="{{classname}}" /> class.
        /// </summary>
        protected {{classname}}() { }
    {{/hasOnlyReadOnly}}
    {{/hasRequired}}
        /// <summary>
        /// Initializes a new instance of the <see cref="{{classname}}" /> class.
        /// </summary>
        {{#vars}}
        {{^isReadOnly}}
        /// <param name="{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}">{{description}}{{^description}}{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}{{/description}}{{#required}} (required){{/required}}{{#defaultValue}} (default to {{.}}){{/defaultValue}}.</param>
        {{/isReadOnly}}
        {{/vars}}
        public {{classname}}({{#readWriteVars}}{{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}}{{/isEnum}} {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} = {{{defaultValue}}}{{^defaultValue}}default({{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}}{{/isEnum}}){{/defaultValue}}{{^-last}}, {{/-last}}{{/readWriteVars}}){{#parent}} : base({{#parentVars}}{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}{{^-last}}, {{/-last}}{{/parentVars}}){{/parent}}
        {
            {{#vars}}
            {{^isInherited}}
            {{^isReadOnly}}
            {{#required}}
            // to ensure "{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}" is required (not null)
            if ({{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} == null)
            {
                throw new ArgumentNullException("{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} is a required property for {{classname}} and cannot be null");
            }
            this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};

            {{/required}}
            {{#isNullable}}
            this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};
            {{/isNullable}}
            {{/isReadOnly}}
            {{/isInherited}}
            {{/vars}}
            {{#vars}}
            {{^isInherited}}
            {{^isReadOnly}}
            {{^required}}
            {{#defaultValue}}// use default value if no "{{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}}" provided
            if ({{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}} == null)
            {
                this.{{name}} = {{{defaultValue}}};
            }
            else
            {
                this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};
            }
            {{/defaultValue}}
            {{^defaultValue}}
this.{{name}} = {{#lambda.camelcase_param}}{{name}}{{/lambda.camelcase_param}};
            {{/defaultValue}}
            {{/required}}
            {{/isReadOnly}}
            {{/isInherited}}
            {{/vars}}
        }

        {{#vars}}
        {{^isInherited}}
        {{^isEnum}}
        {{#description}}
        /// <summary>
        /// {{.}}
        /// </summary>
        {{/description}}
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{dataType}}} {{name}};
        {{/isEnum}}
        {{/isInherited}}
        {{/vars}}

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class {{classname}} {\n");
            {{#parent}}
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).AppendLine();
            {{/parent}}
            {{#vars}}
            sb.Append("  {{name}}: ").Append({{name}}).AppendLine();
            {{/vars}}
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as {{classname}});
        }

        /// <summary>
        /// Returns true if {{classname}} instances are equal
        /// </summary>
        /// <param name="input">Instance of {{classname}} to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals({{classname}} input)
        {
            if (input == null)
                return false;

            return {{#vars}}{{#parent}}base.Equals(input) && {{/parent}}{{^isContainer}}
                (
                    {{name}} == input.{{name}} ||
                    ({{name}} != null &&
                    {{name}}.Equals(input.{{name}}))
                ){{^-last}} && {{/-last}}{{/isContainer}}{{#isContainer}}
                (
                    {{name}} == input.{{name}} ||
                    {{name}} != null &&
                    input.{{name}} != null &&
                    {{name}}.SequenceEqual(input.{{name}})
                ){{^-last}} && {{/-last}}{{/isContainer}}{{/vars}}{{^vars}}{{#parent}}base.Equals(input){{/parent}}{{^parent}}false{{/parent}}{{/vars}};
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                {{#parent}}
                int hashCode = base.GetHashCode();
                {{/parent}}
                {{^parent}}
                int hashCode = 41;
                {{/parent}}
                {{#vars}}
                if ({{name}} != null)
                    hashCode = hashCode * 59 + {{name}}.GetHashCode();
                {{/vars}}
                return hashCode;
            }
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public {{#parent}}{{^isArray}}{{^isMap}}override {{/isMap}}{{/isArray}}{{/parent}}{{^parent}}virtual {{/parent}}string ToJson(RGN.Dependencies.Serialization.IJson json)
        {
            return json.ToJson(this);
        }
        /// <summary>
        /// Returns the {{classname}} intance from json string
        /// </summary>
        /// <returns>{{classname}} intance from json string</returns>
        public static {{classname}} FromJson(RGN.Dependencies.Serialization.IJson json, string jsonStr)
        {
            return json.FromJson<{{classname}}>(jsonStr);
        }
    }
